<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mini.store.demo.dao.ItemMapper">
  <resultMap id="ItemStockResultMap" type="com.mini.store.demo.model.ItemStock">
    <result column="item_stock" jdbcType="INTEGER" property="itemStock" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.mini.store.demo.model.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_price" jdbcType="DECIMAL" property="itemPrice" />
    <result column="item_price_unit" jdbcType="VARCHAR" property="itemPriceUnit" />
    <result column="item_description" jdbcType="VARCHAR" property="itemDescription" />
    <result column="item_sales" jdbcType="INTEGER" property="itemSales" />
    <result column="item_img_url" jdbcType="VARCHAR" property="itemImgUrl" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="category" jdbcType="VARCHAR" property="category" />

    <!-- 另外一张表的关联 -->
    <association property="itemStock" resultMap="ItemStockResultMap">
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    items.item_id, items.item_name, items.item_price, items.item_price_unit, items.item_description, items.item_sales, items.item_img_url,
    items.user_id, items.create_date, items.update_date, items.category, item_stock.item_stock
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    <!--
    多表查询语句，items和item_stock里面的关系是一对一，一个items对应一个item-stock,
    一个外键关联 items.item_id = item_stock.item_id
    select
    items.item_id, items.item_name, items.item_price, items.item_price_unit, items.item_description, items.item_sales, items.item_img_url,
    items.user_id, items.create_date, items.update_date, items.category, item_stock.item_stock
    from items, item_stock
    where items.item_id = 2
    and items.item_id= item_stock.item_id
     -->
    select 
    <include refid="Base_Column_List" />
    from items, item_stock
    where items.item_id = #{itemId,jdbcType=INTEGER}
    and items.item_id = item_stock.item_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    delete from items
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mini.store.demo.model.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    insert into items (item_id, item_name, item_price, 
      item_price_unit, item_description, item_sales, 
      item_img_url, user_id, create_date, 
      update_date, category)
    values (#{itemId,jdbcType=INTEGER}, #{itemName,jdbcType=VARCHAR}, #{itemPrice,jdbcType=DECIMAL}, 
      #{itemPriceUnit,jdbcType=VARCHAR}, #{itemDescription,jdbcType=VARCHAR}, #{itemSales,jdbcType=INTEGER}, 
      #{itemImgUrl,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{category,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mini.store.demo.model.Item" useGeneratedKeys="true" keyProperty="itemId" keyColumn="item_id">

    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    insert into items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemPrice != null">
        item_price,
      </if>
      <if test="itemPriceUnit != null">
        item_price_unit,
      </if>
      <if test="itemDescription != null">
        item_description,
      </if>
      <if test="itemSales != null">
        item_sales,
      </if>
      <if test="itemImgUrl != null">
        item_img_url,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="category != null">
        category,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemPrice != null">
        #{itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="itemPriceUnit != null">
        #{itemPriceUnit,jdbcType=VARCHAR},
      </if>
      <if test="itemDescription != null">
        #{itemDescription,jdbcType=VARCHAR},
      </if>
      <if test="itemSales != null">
        #{itemSales,jdbcType=INTEGER},
      </if>
      <if test="itemImgUrl != null">
        #{itemImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mini.store.demo.model.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    update items
    <set>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemPrice != null">
        item_price = #{itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="itemPriceUnit != null">
        item_price_unit = #{itemPriceUnit,jdbcType=VARCHAR},
      </if>
      <if test="itemDescription != null">
        item_description = #{itemDescription,jdbcType=VARCHAR},
      </if>
      <if test="itemSales != null">
        item_sales = #{itemSales,jdbcType=INTEGER},
      </if>
      <if test="itemImgUrl != null">
        item_img_url = #{itemImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mini.store.demo.model.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 08 17:44:28 CST 2020.
    -->
    update items
    set item_name = #{itemName,jdbcType=VARCHAR},
      item_price = #{itemPrice,jdbcType=DECIMAL},
      item_price_unit = #{itemPriceUnit,jdbcType=VARCHAR},
      item_description = #{itemDescription,jdbcType=VARCHAR},
      item_sales = #{itemSales,jdbcType=INTEGER},
      item_img_url = #{itemImgUrl,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=VARCHAR}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <select id="listItem" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from items, item_stock
    where items.item_id = item_stock.item_id
    order by items.item_sales Desc
  </select>
<!--  https://stackoverflow.com/questions/13639503/search-condition-mysql-if-name-name-limit-1-limit-5-->
<!--  impossible to have if in limit-->
  <select id="listItemWithLimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from items, item_stock
    where items.item_id = item_stock.item_id
    order by items.item_sales Desc
    LIMIT #{limit,jdbcType=INTEGER};
  </select>
  <select id="listItemByCategory" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from items, item_stock
    where items.item_id = item_stock.item_id
    and items.category = #{category,jdbcType=VARCHAR}
    order by items.item_sales Desc;
  </select>

  <!--
    // WHERE CustomerName LIKE '%or%'	Finds any values that have "or" in any position
    select
    items.item_id, items.item_name, items.item_price, items.item_price_unit, items.item_description, items.item_sales, items.item_img_url,
    items.user_id, items.create_date, items.update_date, items.category, item_stock.item_stock
    from items, item_stock
    where items.item_name like concat(concat('%', 'app'),'%')
    and items.item_id= item_stock.item_id
   -->
  <select id="listItemByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from items, item_stock
    where items.item_id = item_stock.item_id
    and items.item_name like concat(concat('%', #{itemName,jdbcType=VARCHAR}),'%')
    order by items.item_sales Desc;
  </select>
  <select id="listItemByIds" resultMap="BaseResultMap" parameterType="java.util.List">
    select
    <include refid="Base_Column_List" />
    from items, item_stock
    where items.item_id = item_stock.item_id
    and items.item_id in
    <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
</mapper>
