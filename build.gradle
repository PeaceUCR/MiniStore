plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.arenagod.gradle.MybatisGenerator" version "1.4" //gradle提供的mybatis generator插件 https://plugins.gradle.org/plugin/com.arenagod.gradle.MybatisGenerator
    id "org.flywaydb.flyway" version "6.3.0" //https://flywaydb.org/documentation/gradle/
}

group = 'com.mini.store'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile ('com.alibaba:druid-spring-boot-starter:1.1.16') {
        exclude group: 'com.alibaba:jconsole'
        exclude group: 'com.alibaba:tools'
    }
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.0'
    compile 'org.hibernate:hibernate-validator:5.2.4.Final'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'mysql:mysql-connector-java:5.1.41'
    compile "org.flywaydb:flyway-core:5.2.3"
    compile "javax.xml.bind:jaxb-api:2.4.0-b180830.0359"
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

//mybatisGenerator配置
configurations {
    mybatisGenerator
}

mybatisGenerator {
    verbose = true //允许移动生成文件
//    overwrite = true //允许自动覆盖文件
    configFile='src/main/resources/mybatis-generator.xml'
}

test {
    useJUnitPlatform()
}
